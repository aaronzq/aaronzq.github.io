<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aaron&#39;s Blog</title>
    <link>https://aaronzq.github.io/</link>
    <description>Recent content on Aaron&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>aaron-zzz@outlook.com (Aaron)</managingEditor>
    <webMaster>aaron-zzz@outlook.com (Aaron)</webMaster>
    <copyright>(c) 2017 Aaron</copyright>
    <lastBuildDate>Mon, 23 Oct 2017 17:00:15 +0800</lastBuildDate>
    
	<atom:link href="https://aaronzq.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>List and Array operations in Python</title>
      <link>https://aaronzq.github.io/2017/10/23/list-and-array-operations-in-python/</link>
      <pubDate>Mon, 23 Oct 2017 17:00:15 +0800</pubDate>
      <author>aaron-zzz@outlook.com (Aaron)</author>
      <guid>https://aaronzq.github.io/2017/10/23/list-and-array-operations-in-python/</guid>
      <description> todo </description>
    </item>
    
    <item>
      <title>Get Photo from Raspberry Pi</title>
      <link>https://aaronzq.github.io/2017/10/23/get-photo-from-raspberry-pi/</link>
      <pubDate>Mon, 23 Oct 2017 15:26:10 +0800</pubDate>
      <author>aaron-zzz@outlook.com (Aaron)</author>
      <guid>https://aaronzq.github.io/2017/10/23/get-photo-from-raspberry-pi/</guid>
      <description>Get Image from Raspberry pi 1. Initialize the RaspberryPi with its camera Assuming that you have already configured your Raspberry Pi 3B+ and its camera module. We are going to use its internal camera package to simply grab the image and download to our PC.
2. Login on your Raspberry Pi with SSH and take shots For example, use putty.exe on Windows environment and login on to your Pi under the same network.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://aaronzq.github.io/about/</link>
      <pubDate>Mon, 23 Oct 2017 15:25:13 +0800</pubDate>
      <author>aaron-zzz@outlook.com (Aaron)</author>
      <guid>https://aaronzq.github.io/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Adaptive Threshold</title>
      <link>https://aaronzq.github.io/2017/10/19/adaptive-threshold/</link>
      <pubDate>Thu, 19 Oct 2017 22:51:53 +0800</pubDate>
      <author>aaron-zzz@outlook.com (Aaron)</author>
      <guid>https://aaronzq.github.io/2017/10/19/adaptive-threshold/</guid>
      <description>AdaptiveThreshold Code: out=cv2.adaptiveThreshold(img,255,cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY,area,offset)  area(odd): in how big an area aroung a point it calculate the mean as a threshold
offset: the actual threshold is mean minus offset
Experiment: For a test, input the Shearing Interference Image(160*240),we manually set the threshold and estimate the best solution:
With adaptive threshold with different area varying in 91,71,51,31 and different offset in range of -10 to 9, we get the following result.</description>
    </item>
    
  </channel>
</rss>